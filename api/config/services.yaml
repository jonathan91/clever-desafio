# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php, }'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        arguments: 
           - '@tactician.commandbus'
        tags: ['controller.service_arguments']
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
# Customers
    App\Service\Query\CustomersQuery:
        class: App\Service\Query\CustomersQuery
        arguments:
           - '@doctrine.orm.entity_manager'
    App\Service\Handler\Customers\PostHandler:
        class: App\Service\Handler\Customers\PostHandler
        arguments:
           - '@doctrine.orm.entity_manager'
        tags:
           - { name: tactician.handler, command: App\Service\Command\Customers\PostCommand }
    App\Service\Handler\Customers\PutHandler:
        class: App\Service\Handler\Customers\PutHandler
        arguments:
           - '@doctrine.orm.entity_manager'
        tags:
           - { name: tactician.handler, command: App\Service\Command\Customers\PutCommand }
    App\Service\Handler\Customers\DeleteHandler:
        class: App\Service\Handler\Customers\DeleteHandler
        arguments:
           - '@doctrine.orm.entity_manager'
        tags:
           - { name: tactician.handler, command: App\Service\Command\Customers\DeleteCommand }
# Map-Services-Entity          